<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="31" failures="0" time="25.748">
  <testsuite name="tag album" errors="0" failures="0" skipped="0" timestamp="2021-01-18T13:08:32" time="25.626" tests="31">
    <testcase classname="tag album tagAlbum(/MyArtis/1973 MyAlbum) is connected should call utils" name="tag album tagAlbum(/MyArtis/1973 MyAlbum) is connected should call utils" time="0.011">
    </testcase>
    <testcase classname="tag album tagAlbum(/MyArtis/1973 MyAlbum) with response from prompt has called readDir(/MyArtis/1973 MyAlbum)" name="tag album tagAlbum(/MyArtis/1973 MyAlbum) with response from prompt has called readDir(/MyArtis/1973 MyAlbum)" time="0.005">
    </testcase>
    <testcase classname="tag album tagAlbum(/MyArtis/1973 MyAlbum) with response from prompt has called extractTags" name="tag album tagAlbum(/MyArtis/1973 MyAlbum) with response from prompt has called extractTags" time="2.141">
    </testcase>
    <testcase classname="tag album tagAlbum(/MyArtis/1973 MyAlbum) with response from prompt has called tagFile 7 times" name="tag album tagAlbum(/MyArtis/1973 MyAlbum) with response from prompt has called tagFile 7 times" time="0.004">
    </testcase>
    <testcase classname="tag album tagAlbum(/MyArtis/1973 MyAlbum) with response from prompt has called tagFile with {&quot;file&quot;: [Object], &quot;index&quot;: 0}" name="tag album tagAlbum(/MyArtis/1973 MyAlbum) with response from prompt has called tagFile with {&quot;file&quot;: [Object], &quot;index&quot;: 0}" time="0.003">
    </testcase>
    <testcase classname="tag album tagAlbum(/MyArtis/1973 MyAlbum) with response from prompt has called tagFile with {&quot;file&quot;: [Object], &quot;index&quot;: 1}" name="tag album tagAlbum(/MyArtis/1973 MyAlbum) with response from prompt has called tagFile with {&quot;file&quot;: [Object], &quot;index&quot;: 1}" time="0.003">
    </testcase>
    <testcase classname="tag album tagAlbum(/MyArtis/1973 MyAlbum) with response from prompt has called tagFile with {&quot;file&quot;: [Object], &quot;index&quot;: 2}" name="tag album tagAlbum(/MyArtis/1973 MyAlbum) with response from prompt has called tagFile with {&quot;file&quot;: [Object], &quot;index&quot;: 2}" time="0.003">
    </testcase>
    <testcase classname="tag album tagAlbum(/MyArtis/1973 MyAlbum) with response from prompt has called tagFile with {&quot;file&quot;: [Object], &quot;index&quot;: 3}" name="tag album tagAlbum(/MyArtis/1973 MyAlbum) with response from prompt has called tagFile with {&quot;file&quot;: [Object], &quot;index&quot;: 3}" time="0.002">
    </testcase>
    <testcase classname="tag album tagAlbum(/MyArtis/1973 MyAlbum) with response from prompt has called tagFile with {&quot;file&quot;: [Object], &quot;index&quot;: 4}" name="tag album tagAlbum(/MyArtis/1973 MyAlbum) with response from prompt has called tagFile with {&quot;file&quot;: [Object], &quot;index&quot;: 4}" time="0.003">
    </testcase>
    <testcase classname="tag album tagAlbum(/MyArtis/1973 MyAlbum) with response from prompt has called tagFile with {&quot;file&quot;: [Object], &quot;index&quot;: 5}" name="tag album tagAlbum(/MyArtis/1973 MyAlbum) with response from prompt has called tagFile with {&quot;file&quot;: [Object], &quot;index&quot;: 5}" time="0.015">
    </testcase>
    <testcase classname="tag album tagAlbum(/MyArtis/1973 MyAlbum) with response from prompt has called tagFile with {&quot;file&quot;: [Object], &quot;index&quot;: 6}" name="tag album tagAlbum(/MyArtis/1973 MyAlbum) with response from prompt has called tagFile with {&quot;file&quot;: [Object], &quot;index&quot;: 6}" time="0.004">
    </testcase>
    <testcase classname="tag album mergeMetaData of parameters files: undefined and promptResponse: undefined  should result in expected: []" name="tag album mergeMetaData of parameters files: undefined and promptResponse: undefined  should result in expected: []" time="0.028">
    </testcase>
    <testcase classname="tag album mergeMetaData of parameters files: [ [length]: 0 ] and promptResponse: {}  should result in expected: []" name="tag album mergeMetaData of parameters files: [ [length]: 0 ] and promptResponse: {}  should result in expected: []" time="0.002">
    </testcase>
    <testcase classname="tag album mergeMetaData of parameters files: [ { path: &apos;mypath&apos; }, [length]: 1 ] and promptResponse: {}  should result in expected: [{&quot;path&quot;:&quot;mypath&quot;,&quot;track&quot;:{&quot;trackNoTotal&quot;:&quot;1&quot;}}]" name="tag album mergeMetaData of parameters files: [ { path: &apos;mypath&apos; }, [length]: 1 ] and promptResponse: {}  should result in expected: [{&quot;path&quot;:&quot;mypath&quot;,&quot;track&quot;:{&quot;trackNoTotal&quot;:&quot;1&quot;}}]" time="0.002">
    </testcase>
    <testcase classname="tag album mergeMetaData of parameters files: [ { path: &apos;mypath&apos;, fileType: &apos;flac&apos; }, [length]: 1 ] and promptResponse: {}  should result in expected: [{&quot;path&quot;:&quot;mypath&quot;,&quot;fileType&quot;:&quot;flac&quot;,&quot;track&quot;:{&quot;trackNoTotal&quot;:&quot;1&quot;}}]" name="tag album mergeMetaData of parameters files: [ { path: &apos;mypath&apos;, fileType: &apos;flac&apos; }, [length]: 1 ] and promptResponse: {}  should result in expected: [{&quot;path&quot;:&quot;mypath&quot;,&quot;fileType&quot;:&quot;flac&quot;,&quot;track&quot;:{&quot;trackNoTotal&quot;:&quot;1&quot;}}]" time="0.004">
    </testcase>
    <testcase classname="tag album mergeMetaData of parameters files: [
  {
    path: &apos;mypath&apos;,
    fileType: &apos;flac&apos;,
    track: { album: &apos;Album&apos;, artist: &apos;Artist&apos; }
  },
  [length]: 1
] and promptResponse: {}  should result in expected: [{&quot;path&quot;:&quot;mypath&quot;,&quot;fileType&quot;:&quot;flac&quot;,&quot;track&quot;:{&quot;album&quot;:&quot;Album&quot;,&quot;artist&quot;:&quot;Artist&quot;,&quot;trackNoTotal&quot;:&quot;1&quot;}}]" name="tag album mergeMetaData of parameters files: [
  {
    path: &apos;mypath&apos;,
    fileType: &apos;flac&apos;,
    track: { album: &apos;Album&apos;, artist: &apos;Artist&apos; }
  },
  [length]: 1
] and promptResponse: {}  should result in expected: [{&quot;path&quot;:&quot;mypath&quot;,&quot;fileType&quot;:&quot;flac&quot;,&quot;track&quot;:{&quot;album&quot;:&quot;Album&quot;,&quot;artist&quot;:&quot;Artist&quot;,&quot;trackNoTotal&quot;:&quot;1&quot;}}]" time="0.002">
    </testcase>
    <testcase classname="tag album mergeMetaData of parameters files: [
  {
    path: &apos;mypath&apos;,
    fileType: &apos;flac&apos;,
    track: { album: &apos;Album&apos;, artist: &apos;Artist&apos; }
  },
  [length]: 1
] and promptResponse: { album: &apos;Override&apos;, artist: &apos;Override&apos; }  should result in expected: [{&quot;path&quot;:&quot;mypath&quot;,&quot;fileType&quot;:&quot;flac&quot;,&quot;track&quot;:{&quot;album&quot;:&quot;Override&quot;,&quot;artist&quot;:&quot;Override&quot;,&quot;trackNoTotal&quot;:&quot;1&quot;}}]" name="tag album mergeMetaData of parameters files: [
  {
    path: &apos;mypath&apos;,
    fileType: &apos;flac&apos;,
    track: { album: &apos;Album&apos;, artist: &apos;Artist&apos; }
  },
  [length]: 1
] and promptResponse: { album: &apos;Override&apos;, artist: &apos;Override&apos; }  should result in expected: [{&quot;path&quot;:&quot;mypath&quot;,&quot;fileType&quot;:&quot;flac&quot;,&quot;track&quot;:{&quot;album&quot;:&quot;Override&quot;,&quot;artist&quot;:&quot;Override&quot;,&quot;trackNoTotal&quot;:&quot;1&quot;}}]" time="0.001">
    </testcase>
    <testcase classname="tag album mergeMetaData of parameters files: [
  {
    path: &apos;mypath&apos;,
    fileType: &apos;flac&apos;,
    track: { trackName: &apos;TrackName&apos; }
  },
  [length]: 1
] and promptResponse: { album: &apos;Album&apos;, artist: &apos;Artist&apos; }  should result in expected: [{&quot;path&quot;:&quot;mypath&quot;,&quot;fileType&quot;:&quot;flac&quot;,&quot;track&quot;:{&quot;album&quot;:&quot;Album&quot;,&quot;artist&quot;:&quot;Artist&quot;,&quot;trackName&quot;:&quot;TrackName&quot;,&quot;trackNoTotal&quot;:&quot;1&quot;}}]" name="tag album mergeMetaData of parameters files: [
  {
    path: &apos;mypath&apos;,
    fileType: &apos;flac&apos;,
    track: { trackName: &apos;TrackName&apos; }
  },
  [length]: 1
] and promptResponse: { album: &apos;Album&apos;, artist: &apos;Artist&apos; }  should result in expected: [{&quot;path&quot;:&quot;mypath&quot;,&quot;fileType&quot;:&quot;flac&quot;,&quot;track&quot;:{&quot;album&quot;:&quot;Album&quot;,&quot;artist&quot;:&quot;Artist&quot;,&quot;trackName&quot;:&quot;TrackName&quot;,&quot;trackNoTotal&quot;:&quot;1&quot;}}]" time="0.002">
    </testcase>
    <testcase classname="tag album mergeMetaData of parameters files: [
  { path: &apos;mypath&apos;, fileType: &apos;flac&apos;, track: { trackNoTotal: &apos;15&apos; } },
  [length]: 1
] and promptResponse: {}  should result in expected: [{&quot;path&quot;:&quot;mypath&quot;,&quot;fileType&quot;:&quot;flac&quot;,&quot;track&quot;:{&quot;trackNoTotal&quot;:&quot;15&quot;}}]" name="tag album mergeMetaData of parameters files: [
  { path: &apos;mypath&apos;, fileType: &apos;flac&apos;, track: { trackNoTotal: &apos;15&apos; } },
  [length]: 1
] and promptResponse: {}  should result in expected: [{&quot;path&quot;:&quot;mypath&quot;,&quot;fileType&quot;:&quot;flac&quot;,&quot;track&quot;:{&quot;trackNoTotal&quot;:&quot;15&quot;}}]" time="0.001">
    </testcase>
    <testcase classname="tag album mergeMetaData of parameters files: [
  { path: &apos;mypath&apos;, fileType: &apos;flac&apos; },
  { path: &apos;mypath&apos;, fileType: &apos;flac&apos; },
  [length]: 2
] and promptResponse: {}  should result in expected: [{&quot;path&quot;:&quot;mypath&quot;,&quot;fileType&quot;:&quot;flac&quot;,&quot;track&quot;:{&quot;trackNoTotal&quot;:&quot;2&quot;}},{&quot;path&quot;:&quot;mypath&quot;,&quot;fileType&quot;:&quot;flac&quot;,&quot;track&quot;:{&quot;trackNoTotal&quot;:&quot;2&quot;}}]" name="tag album mergeMetaData of parameters files: [
  { path: &apos;mypath&apos;, fileType: &apos;flac&apos; },
  { path: &apos;mypath&apos;, fileType: &apos;flac&apos; },
  [length]: 2
] and promptResponse: {}  should result in expected: [{&quot;path&quot;:&quot;mypath&quot;,&quot;fileType&quot;:&quot;flac&quot;,&quot;track&quot;:{&quot;trackNoTotal&quot;:&quot;2&quot;}},{&quot;path&quot;:&quot;mypath&quot;,&quot;fileType&quot;:&quot;flac&quot;,&quot;track&quot;:{&quot;trackNoTotal&quot;:&quot;2&quot;}}]" time="0.001">
    </testcase>
    <testcase classname="with track  undefined  should alter trackNo as sortable result in undefined" name="with track  undefined  should alter trackNo as sortable result in undefined" time="0.001">
    </testcase>
    <testcase classname="with track  {}  should alter trackNo as sortable result in {}" name="with track  {}  should alter trackNo as sortable result in {}" time="0.001">
    </testcase>
    <testcase classname="with track  { trackNo: &apos;1&apos; }  should alter trackNo as sortable result in {&quot;trackNo&quot;:&quot;1&quot;}" name="with track  { trackNo: &apos;1&apos; }  should alter trackNo as sortable result in {&quot;trackNo&quot;:&quot;1&quot;}" time="0.002">
    </testcase>
    <testcase classname="with track  { trackNo: &apos;1&apos;, trackNoTotal: &apos;10&apos; }  should alter trackNo as sortable result in {&quot;trackNo&quot;:&quot;01&quot;,&quot;trackNoTotal&quot;:&quot;10&quot;}" name="with track  { trackNo: &apos;1&apos;, trackNoTotal: &apos;10&apos; }  should alter trackNo as sortable result in {&quot;trackNo&quot;:&quot;01&quot;,&quot;trackNoTotal&quot;:&quot;10&quot;}" time="0.001">
    </testcase>
    <testcase classname="with track  { trackNo: &apos;01&apos;, trackNoTotal: &apos;10&apos; }  should alter trackNo as sortable result in {&quot;trackNo&quot;:&quot;01&quot;,&quot;trackNoTotal&quot;:&quot;10&quot;}" name="with track  { trackNo: &apos;01&apos;, trackNoTotal: &apos;10&apos; }  should alter trackNo as sortable result in {&quot;trackNo&quot;:&quot;01&quot;,&quot;trackNoTotal&quot;:&quot;10&quot;}" time="0.001">
    </testcase>
    <testcase classname="with track  { trackNo: &apos;1&apos;, trackNoTotal: &apos;20&apos;, discnumber: &apos;1&apos; }  should alter trackNo as sortable result in {&quot;trackNo&quot;:&quot;01&quot;,&quot;trackNoTotal&quot;:&quot;20&quot;,&quot;discnumber&quot;:&quot;1&quot;}" name="with track  { trackNo: &apos;1&apos;, trackNoTotal: &apos;20&apos;, discnumber: &apos;1&apos; }  should alter trackNo as sortable result in {&quot;trackNo&quot;:&quot;01&quot;,&quot;trackNoTotal&quot;:&quot;20&quot;,&quot;discnumber&quot;:&quot;1&quot;}" time="0.004">
    </testcase>
    <testcase classname="with track  { trackNo: &apos;1&apos;, trackNoTotal: &apos;20&apos;, discnumber: &apos;1&apos;, noOfDiscs: &apos;2&apos; }  should alter trackNo as sortable result in {&quot;trackNo&quot;:&quot;101&quot;,&quot;trackNoTotal&quot;:&quot;20&quot;,&quot;discnumber&quot;:&quot;1&quot;,&quot;noOfDiscs&quot;:&quot;2&quot;}" name="with track  { trackNo: &apos;1&apos;, trackNoTotal: &apos;20&apos;, discnumber: &apos;1&apos;, noOfDiscs: &apos;2&apos; }  should alter trackNo as sortable result in {&quot;trackNo&quot;:&quot;101&quot;,&quot;trackNoTotal&quot;:&quot;20&quot;,&quot;discnumber&quot;:&quot;1&quot;,&quot;noOfDiscs&quot;:&quot;2&quot;}" time="0.002">
    </testcase>
    <testcase classname="with track  { trackNo: &apos;1&apos;, trackNoTotal: &apos;20&apos;, discnumber: &apos;2&apos; }  should alter trackNo as sortable result in {&quot;trackNo&quot;:&quot;201&quot;,&quot;trackNoTotal&quot;:&quot;20&quot;,&quot;discnumber&quot;:&quot;2&quot;}" name="with track  { trackNo: &apos;1&apos;, trackNoTotal: &apos;20&apos;, discnumber: &apos;2&apos; }  should alter trackNo as sortable result in {&quot;trackNo&quot;:&quot;201&quot;,&quot;trackNoTotal&quot;:&quot;20&quot;,&quot;discnumber&quot;:&quot;2&quot;}" time="0.001">
    </testcase>
    <testcase classname="with track  { trackNo: &apos;1&apos;, trackNoTotal: &apos;9&apos;, discnumber: &apos;2&apos; }  should alter trackNo as sortable result in {&quot;trackNo&quot;:&quot;201&quot;,&quot;trackNoTotal&quot;:&quot;9&quot;,&quot;discnumber&quot;:&quot;2&quot;}" name="with track  { trackNo: &apos;1&apos;, trackNoTotal: &apos;9&apos;, discnumber: &apos;2&apos; }  should alter trackNo as sortable result in {&quot;trackNo&quot;:&quot;201&quot;,&quot;trackNoTotal&quot;:&quot;9&quot;,&quot;discnumber&quot;:&quot;2&quot;}" time="0.001">
    </testcase>
    <testcase classname="with track  { trackNo: &apos;1&apos;, trackNoTotal: &apos;9&apos;, discnumber: &apos;02&apos; }  should alter trackNo as sortable result in {&quot;trackNo&quot;:&quot;201&quot;,&quot;trackNoTotal&quot;:&quot;9&quot;,&quot;discnumber&quot;:&quot;02&quot;}" name="with track  { trackNo: &apos;1&apos;, trackNoTotal: &apos;9&apos;, discnumber: &apos;02&apos; }  should alter trackNo as sortable result in {&quot;trackNo&quot;:&quot;201&quot;,&quot;trackNoTotal&quot;:&quot;9&quot;,&quot;discnumber&quot;:&quot;02&quot;}" time="0.002">
    </testcase>
    <testcase classname="with track  { trackNo: &apos;201&apos;, trackNoTotal: &apos;9&apos;, discnumber: &apos;02&apos; }  should alter trackNo as sortable result in {&quot;trackNo&quot;:&quot;201&quot;,&quot;trackNoTotal&quot;:&quot;9&quot;,&quot;discnumber&quot;:&quot;02&quot;}" name="with track  { trackNo: &apos;201&apos;, trackNoTotal: &apos;9&apos;, discnumber: &apos;02&apos; }  should alter trackNo as sortable result in {&quot;trackNo&quot;:&quot;201&quot;,&quot;trackNoTotal&quot;:&quot;9&quot;,&quot;discnumber&quot;:&quot;02&quot;}" time="0.001">
    </testcase>
  </testsuite>
</testsuites>